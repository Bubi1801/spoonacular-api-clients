#import <Foundation/Foundation.h>
#import "OAIAddMealPlanTemplate200Response.h"
#import "OAIAddToMealPlanRequest.h"
#import "OAIAddToShoppingListRequest.h"
#import "OAIConnectUser200Response.h"
#import "OAIConnectUserRequest.h"
#import "OAIGenerateMealPlan200Response.h"
#import "OAIGenerateShoppingList200Response.h"
#import "OAIGetMealPlanTemplate200Response.h"
#import "OAIGetMealPlanTemplates200Response.h"
#import "OAIGetMealPlanWeek200Response.h"
#import "OAIGetShoppingList200Response.h"
#import "OAIApi.h"

/**
* spoonacular API
* The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
*
* The version of the OpenAPI document: 1.1
* Contact: mail@spoonacular.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIMealPlanningApi: NSObject <OAIApi>

extern NSString* kOAIMealPlanningApiErrorDomain;
extern NSInteger kOAIMealPlanningApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Add Meal Plan Template
/// Add a meal plan template for a user.
///
/// @param username The username.
/// @param hash The private hash for the username.
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIAddMealPlanTemplate200Response*
-(NSURLSessionTask*) addMealPlanTemplateWithUsername: (NSString*) username
    hash: (NSString*) hash
    completionHandler: (void (^)(OAIAddMealPlanTemplate200Response* output, NSError* error)) handler;


/// Add to Meal Plan
/// Add an item to the user's meal plan.
///
/// @param username The username.
/// @param hash The private hash for the username.
/// @param addToMealPlanRequest 
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return NSObject*
-(NSURLSessionTask*) addToMealPlanWithUsername: (NSString*) username
    hash: (NSString*) hash
    addToMealPlanRequest: (OAIAddToMealPlanRequest*) addToMealPlanRequest
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Add to Shopping List
/// Add an item to the current shopping list of a user.
///
/// @param username The username.
/// @param hash The private hash for the username.
/// @param addToShoppingListRequest 
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIGenerateShoppingList200Response*
-(NSURLSessionTask*) addToShoppingListWithUsername: (NSString*) username
    hash: (NSString*) hash
    addToShoppingListRequest: (OAIAddToShoppingListRequest*) addToShoppingListRequest
    completionHandler: (void (^)(OAIGenerateShoppingList200Response* output, NSError* error)) handler;


/// Clear Meal Plan Day
/// Delete all planned items from the user's meal plan for a specific day.
///
/// @param username The username.
/// @param date The date in the format yyyy-mm-dd.
/// @param hash The private hash for the username.
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return NSObject*
-(NSURLSessionTask*) clearMealPlanDayWithUsername: (NSString*) username
    date: (NSString*) date
    hash: (NSString*) hash
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Connect User
/// In order to call user-specific endpoints, you need to connect your app's users to spoonacular users.
///
/// @param connectUserRequest 
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIConnectUser200Response*
-(NSURLSessionTask*) connectUserWithConnectUserRequest: (OAIConnectUserRequest*) connectUserRequest
    completionHandler: (void (^)(OAIConnectUser200Response* output, NSError* error)) handler;


/// Delete from Meal Plan
/// Delete an item from the user's meal plan.
///
/// @param username The username.
/// @param _id The shopping list item id.
/// @param hash The private hash for the username.
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return NSObject*
-(NSURLSessionTask*) deleteFromMealPlanWithUsername: (NSString*) username
    _id: (NSNumber*) _id
    hash: (NSString*) hash
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Delete from Shopping List
/// Delete an item from the current shopping list of the user.
///
/// @param username The username.
/// @param _id The item&#39;s id.
/// @param hash The private hash for the username.
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return NSObject*
-(NSURLSessionTask*) deleteFromShoppingListWithUsername: (NSString*) username
    _id: (NSNumber*) _id
    hash: (NSString*) hash
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Delete Meal Plan Template
/// Delete a meal plan template for a user.
///
/// @param username The username.
/// @param _id The item&#39;s id.
/// @param hash The private hash for the username.
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return NSObject*
-(NSURLSessionTask*) deleteMealPlanTemplateWithUsername: (NSString*) username
    _id: (NSNumber*) _id
    hash: (NSString*) hash
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Generate Meal Plan
/// Generate a meal plan with three meals per day (breakfast, lunch, and dinner).
///
/// @param timeFrame Either for one \&quot;day\&quot; or an entire \&quot;week\&quot;. (optional)
/// @param targetCalories What is the caloric target for one day? The meal plan generator will try to get as close as possible to that goal. (optional)
/// @param diet Enter a diet that the meal plan has to adhere to. See a full list of supported diets. (optional)
/// @param exclude A comma-separated list of allergens or ingredients that must be excluded. (optional)
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIGenerateMealPlan200Response*
-(NSURLSessionTask*) generateMealPlanWithTimeFrame: (NSString*) timeFrame
    targetCalories: (NSNumber*) targetCalories
    diet: (NSString*) diet
    exclude: (NSString*) exclude
    completionHandler: (void (^)(OAIGenerateMealPlan200Response* output, NSError* error)) handler;


/// Generate Shopping List
/// Generate the shopping list for a user from the meal planner in a given time frame.
///
/// @param username The username.
/// @param startDate The start date in the format yyyy-mm-dd.
/// @param endDate The end date in the format yyyy-mm-dd.
/// @param hash The private hash for the username.
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIGenerateShoppingList200Response*
-(NSURLSessionTask*) generateShoppingListWithUsername: (NSString*) username
    startDate: (NSString*) startDate
    endDate: (NSString*) endDate
    hash: (NSString*) hash
    completionHandler: (void (^)(OAIGenerateShoppingList200Response* output, NSError* error)) handler;


/// Get Meal Plan Template
/// Get information about a meal plan template.
///
/// @param username The username.
/// @param _id The item&#39;s id.
/// @param hash The private hash for the username.
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIGetMealPlanTemplate200Response*
-(NSURLSessionTask*) getMealPlanTemplateWithUsername: (NSString*) username
    _id: (NSNumber*) _id
    hash: (NSString*) hash
    completionHandler: (void (^)(OAIGetMealPlanTemplate200Response* output, NSError* error)) handler;


/// Get Meal Plan Templates
/// Get meal plan templates from user or public ones.
///
/// @param username The username.
/// @param hash The private hash for the username.
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIGetMealPlanTemplates200Response*
-(NSURLSessionTask*) getMealPlanTemplatesWithUsername: (NSString*) username
    hash: (NSString*) hash
    completionHandler: (void (^)(OAIGetMealPlanTemplates200Response* output, NSError* error)) handler;


/// Get Meal Plan Week
/// Retrieve a meal planned week for the given user. The username must be a spoonacular user and the hash must the the user's hash that can be found in his/her account.
///
/// @param username The username.
/// @param startDate The start date of the meal planned week in the format yyyy-mm-dd.
/// @param hash The private hash for the username.
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIGetMealPlanWeek200Response*
-(NSURLSessionTask*) getMealPlanWeekWithUsername: (NSString*) username
    startDate: (NSString*) startDate
    hash: (NSString*) hash
    completionHandler: (void (^)(OAIGetMealPlanWeek200Response* output, NSError* error)) handler;


/// Get Shopping List
/// Get the current shopping list for the given user.
///
/// @param username The username.
/// @param hash The private hash for the username.
/// 
///  code:200 message:"Success",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIGetShoppingList200Response*
-(NSURLSessionTask*) getShoppingListWithUsername: (NSString*) username
    hash: (NSString*) hash
    completionHandler: (void (^)(OAIGetShoppingList200Response* output, NSError* error)) handler;



@end
